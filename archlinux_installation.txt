ARCHLINUX INSTALL PROCEDURE

1) Verify the boot mode

    # ls /sys/firmware/efi/efivars

    If you get a bunch of lines, all is well.

2)  Connect to the internet

    # ping -c 5 archlinux.org

    It will only ping 5 times

3) Update the system clock

    # timedatectl set-ntp true

    We tell our computer to sync the date and time. At this point we do NOT say what timezone we are in.

4) Partition the disks

    # lsblk

    Check BEFORE PARTITION correctly.

    # cfdisk

    Here you do the necessary partitioning.

    swap partition - 2G - sda8 - Linux swap
    /boot partition - 512M - sda9 - EFI System
    / partition - Rest of the system - sda10 - Linux filesystem

    Do the partitioning and write it. Check your partitioning again using #lsblk.

5) Format the partitions

    Format the EFI partition.
    # mkfs.fat -F32 /dev/sda9

    Format the swap partition and activate it.
    # mkswap /dev/sda8
    # swapon /dev/sda8

    Format the root partition
    mkfs.ext4 /dev/sda10

6) Mount the File Systems

    We need to mount our created partitions into our linux hierarchy. First we need to mount the root partition into /mnt. Then we create /mnt/boot in which we mount the boot partition.
    # mount /dev/sda10 /mnt
    # mkdir /mnt/boot
    # mount /dev/sda9 /mnt/boot

7) Install essential packages (using pacstrap)

    # pacstrap /mnt base base-devel linux-lts linux-lts-headers linux-firmware nano vim bash-completion

8) FSTAB

    We generate a fstab (File System Table) file so linux will know what partitions we have like swap, boot and root.

    # genfstab -U /mnt >> /mnt/etc/fstab

    You should have the partitions as you have configured when you open the file with
    # vim /mnt/etc/fstab

9) CHROOT

    Moving inside the future linux system and changing elements there.
    # arch-chroot /mnt

10) Time Zone

    # ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

    # hwclock --systohc

11) Localization

    vim /etc/locale.gen

    Uncomment the language en_IN UTF-8 and save it. Generate the locale.
    # locale-gen

    Also set the variable LANG or language to reflect the same choice.
    # echo LANG=en_IN.UTF-8 > /etc/locale.conf

12) Hostname

    echo MyHostname > /etc/hostname

    # vim /etc/hosts

    Type the following in the file and save it.

    127.0.0.1   localhost
    ::1         localhost
    127.0.1.1   MyHostname.localdomain MyHostname

13) Network Configuration

    # pacman -S networkmanager
    # systemctl enable NetworkManager

    NetworkManager is case sensitive. You will get 3 symlink lines as a result.

14) Root Password

    # passwd

15) Boot loader

    # pacman -S grub efibootmgr os-prober ntfs-3g
    # grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
    # grub-mkconfig -o /boot/grub/grub.cfg

16) Unmount disks and Reboot

    Exit the chroot and unmount all disks and reboot.

    # exit
    $ umount -a
    $ reboot

    Login to the new system with the root account. Username:root and Password: whatever you specified

17) Adding User

    Create 'darshan' user with sudo access.
    # useradd darshan
    # passwd darshan

    Type the password here. Then you have to run visudo as root to edit the sudoers file

    # visudo

    Uncomment the wheel group. It is the line which begins with wheel and save it.

    %wheel        ALL=(ALL)       ALL

    Add 'darshan' to the wheel group user usermod command.

    # usermod -aG wheel darshan

    Okay so now test whether you really have sudo power.
    17.1) Use the su to switch to the new user account that you created.
            # su darshan

    17.2) Use the groups to verify that the user is in the wheel group.
            $ groups
            darshan wheel

    17.3) Use the sudo command to run the whoami command.
            $ sudo whoami
            root

18) Include the 'multilib' repository

    $ sudo vim /etc/pacman.conf

    Uncomment the repository line and save it.

    [multilib]
    include = /etc/pacman.d/mirrorlist

19) Update the system.

20) X Server, Desktop Environment(DE), Login Display Manager(DM)

    Before installing a DE, you will need to install the X Server first. Once it is completed, install DE.
    $ sudo pacman -S xorg
    $ sudo pacman -S mate mate-extra

    You will also need a display manager to log in to your desktop environment. For the ease, you can install LXDM.
    $ sudo pacman -S lxdm

    Once installed, you can enable to start each time you reboot your system.
    $ sudo systemctl enable lxdm.service

    Reboot your system and you will see the LXDM login screen, select your desktop environment from the list and login.

21) Getting Wi-Fi connection

    Broadcom BCM 43142 requires broadcom-wl-dkms package.
    $ sudo pacman -S broadcom-wl-dkms

    To load the new module, run the following commands as root:
    # rmmod b43 b43legacy bcm43xx bcma brcm80211 brcmfmac brcmsmac ssb wl
    # modprobe wl

    Also, install Network Manager Applet to get the Wifi icon applet.
    $ sudo pacman -S network-manager-applet

    And reboot the system to get Wi-Fi.

22) Install AUR helper yay

23) Install pamac-aur, google-chrome, downgrade, mate-tweak and other packages you want from AUR and the repositories.

    INSTALLING THESE PACKAGES IS A MUST.
        pacman-contrib
        network-manager-applet
        p7zip
        unrar
        zip
        unzip
        gvfs
        gvfs-mtp (For Android File Transfer)
        youtube-dl
        vlc
        libreoffice-fresh
        firefox
        htop
        neofetch
        gdb
        geany
        bleachbit
        ranger
        git
        curl
        wget
        gvim (for +clipboard support for copy pasting between system clipboard and vim buffers)
        vim-airline
        vim-airline-themes
        vim-syntastic
        qbittorrent
        xfce4-terminal
        keepassxc

24) Get the Sound working

    $ sudo pacman -S pulseaudio pulseaudio-alsa pavucontrol alsa-utils alsa-plugins alsa-lib alsa-firmware gstreamer volumeicon

    $ alsamixer

    Press M and unmute the channels and keep increasing the volume levels on all channels to your likings. Check the sound systems.

25) Install tlp
    $ sudo pacman -S tlp

    $ sudo tlp-stat

    Do the necessary implementations and generate the symlinks and enable the services.

26) Install intel-ucode

    $ sudo pacman -S intel-ucode

    Regenerate the grub.cfg.
    $ sudo grub-mkconfig -o /boot/grub/grub.cfg

27) Use all cores for compiling.

	Go to /etc/makepkg.conf file.

	Search for "MAKEFLAGS". Replace the "-j2" with "-j$(nproc)".
	This uses all cores when compiling now.

28) Configure the keyboard shortcuts in the DE and change the DE settings.

29) Pacman hooks to clean package cache and to deal with .pacnew files

        $ sudo mkdir /etc/pacman.d/hooks

        Create a file /etc/pacman.d/hooks/clean_package_cache.hook

        $ sudo vim /etc/pacman.d/hooks/clean_package_cache.hook

        Add the following lines:

                        [Trigger]
                        Operation = Upgrade
                        Operation = Install
                        Operation = Remove
                        Type = Package
                        Target = *
                        [Action]
                        Description = CLEANING PACMAN CACHE...
                        When = PostTransaction
                        Exec = /usr/bin/paccache -r

        Now, create a hook to deal with .pacnew files as well.

        $ sudo vim /etc/pacman.d/hooks/pacdiff.hook

        Add the following lines:

                        [Trigger]
                        Operation = Install
                        Operation = Upgrade
                        Operation = Remove
                        Type = Package
                        Target = *
                        [Action]
                        Description = CHECKING FOR PACNEW FILES...
                        When = PostTransaction
                        Exec = /usr/bin/pacdiff

30) Journal Size Limit

        The maximum size of the persistent journal can be controlled by uncommenting and changing the following:

                # vim /etc/systemd/journald.conf

                SystemMaxUse=100M

        Restart the systemd-journald.service after changing this setting to apply the new limit.
        # systemctl restart systemd-journald.service

31) Update and reboot.
